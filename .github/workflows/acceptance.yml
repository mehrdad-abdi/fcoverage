name: Acceptance Tests

on:
  issue_comment:
    types: [created]

jobs:
  run-tests:
    if: github.event.issue.pull_request != null && contains(github.event.comment.body, 'run acceptance tests')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout PR code
        uses: actions/checkout@v4
        with:
          ref: refs/pull/${{ github.event.issue.number }}/merge

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml', 'poetry.lock', 'pdm.lock', 'requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-      

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          pip install -e .
          mkdir test_artifacts
          pip freeze > test_artifacts/requirements.txt

      - name: Run pytest and capture results
        id: run_tests
        env:
          LLM_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
        run: |
          set +e
          set -x
          env
          pytest -v tests/acceptance > result.log 2>&1
          cat result.log
          mv result.log test_artifacts
          ls 
      
      - name: Prepare PR Comment text
        id: prepare_comment
        env:
          RUN_URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
        run: |
          import os
          run_url=os.environ['RUN_URL']
          with open("test_artifacts/result.log", "r") as f:
            result = f.read()
          text = f"Acceptance Test Results: [View Full Logs]({run_url})\n"
          text = text + "\n"
          text = text + "```\n"
          text = text + result
          text = text + "```\n"
          with open("comment.txt", 'w') as fh:
            fh.write(text)
        shell: python

      - name: Comment on PR with results
        if: always()
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr comment ${{ github.event.pull_request.number }} --body-file comment.txt

      - name: upload artifacts
        uses: actions/upload-artifact@v4
        with:
          path: test_artifacts
          retention-days: 7
